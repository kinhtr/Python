class Solution:
    def myAtoi(self, s: str) -> int:  
        # immediate stop condition and return 0
        if not s.isdigit() and len(s) <= 1 or s.isspace():
            return 0
        sign = 1
        number = ""
        # remove leading whitespace 
        s = s.lstrip()
        # determine the sign of the number 
        if s[0] == "-" or s[0] == "+":
            if s[0] == "-":
                sign = -1
            s = s[1:]   
        # return 0 if the first character is not a number
        if not s[0].isdigit():
            return 0
        # store applicable number inside a variable
        for i in s:
            if not i.isdigit():  
                break
            else:
                number += i
        # remove leading 0s if applicable 
        number.lstrip("0")
        # convert the number to int 
        number = int(number) * sign
        # check range and return result
        if number < -2**31:
            return -2**31
        elif number > 2**31 - 1:
            return 2**31 - 1
        else:
            return number
